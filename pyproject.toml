[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "echo-cleaner"
version = "1.0.0"
description = "Intelligent System Cleaner for Linux"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Fernando Paladini", email = "fnpaladini@gmail.com"}
]
keywords = ["cleaner", "disk-space", "system", "cache", "docker", "linux"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]

dependencies = [
    "PySide6>=6.6.0",
    "psutil>=5.9.0",
    "humanize>=4.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/paladini/echo-cleaner"
Repository = "https://github.com/paladini/echo-cleaner"
Issues = "https://github.com/paladini/echo-cleaner/issues"

[project.scripts]
echo-cleaner = "app.main:main"

[tool.setuptools]
packages = ["app", "app.models", "app.modules", "app.services", "app.ui"]

[tool.setuptools.package-data]
app = ["assets/*"]

# Scripts customizados (use com: python -m build, etc)
# Para executar scripts: use make ou crie um Makefile

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
